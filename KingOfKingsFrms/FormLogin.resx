<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wnpJD7LesAEAAAAASUVORK5CYII=
</value>
  </data>
</root>